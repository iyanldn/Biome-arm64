name: Build and Release Multi-Arch Docker + Binary

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-binaries:
    name: Build Binaries for All Targets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu' || (matrix.target == 'armv7-unknown-linux-gnueabihf' && 'arm-linux-gnueabihf' || '') }} pkg-config libssl-dev

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: biome-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/biome

  docker-build:
    name: Docker Multi-Arch Image
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: yourdockerhub/biome:latest

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          files: |
            biome-*/biome
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

